@model List<ApplicationUser>
  @{
    ViewData["Title"] = "Admin Panel";
  }

<h2> Admin Panel </h2>

<!-- Table to Display the list of Users-->
<table class = "table table-striped">
    <thead>
      <tr>
        <th>ID</th>
        <th>Email</th>
        <th>Subscription</th>
        <th>Status</th>
        <th>Actions</th>
      </tr>   
    </thead>
     <tbody id="UserTableBody">
        @foreach (var user in Model)
        {

          <tr>
              <td>@user.Id</td>
              <td>@user.Email</td>
              <td>@user.Subscription</td>
              <td>@user.Status</td>
              <td>
                  <!-- Button to trigger edit user modal-->
                  <button class="btn btn-primary" onclick="populateEditModal('@user.Id')">Edit</button>
              </td>
          </tr>
        }
        </tbody>
      </table> 


  <!-- Model for editing user-->
  <div class="modal" id="editUserModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Edit User</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"  aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form id="editUserForm">
            <input type="hidden" id="editUserId">
            <div class="mb-3">
              <label for="editEmail" class="form-label">Email</label>
              <input type="email" class="form-control" id="editEmail">
            </div>
            <div class="mb-3">
              <label for="editSubscription" class="form-label">Subscription</label>
             <input type="text" class="form-control" id="editSubscription"> 
            </div>
            <div class="mb-3">
              <label for="editStatus" class="form-label">Status</label>
              <select class="form-control" id="editStatus">
                <option value="active">Active</option>
                <option value="inactive">Inactive</option>
              </select>
            </div>
            <button type="submit" class="btn btn-primary">Save Changes</button>
          </form>
        </div>
      </div>
    </div>
  </div>
  <!-- Bootstrap Css-->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css">
     
  <!-- Bootstrap JS-->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
<script>
  function populateEditModal(userId) {
    const user = @Html.Raw(Json.Serialize(Model));
    const userToEdit = user.find(u => u.id === userId);

    if (userToEdit){
      // Fill modal form with user data
      document.getElementById("editUserId").value = userToEdit.id;
      document.getElementById("editEmail").value = userToEdit.email;
      document.getElementById("editSubscription").value = userToEdit.Subscription;
      document.getElementById("editStatus").value = userToEdit.Status;
    }
  }
   
  // Handle form submission to update the user data
  document.getElementById("editUserForm").addEventListener("submit", function (e){
    e.preventDefault();
    // Gather update data from the form 

    const userId = document.getElementById("editUserId").value;
    const updateData = {
      email: document.getElementById("editEmail").value,
      subscription: document.getElementById("editSubscription").value,
      status: document.getElementById("editStatus").value
    };

    // Send updated data to the server via PUT request
    fetch(`/Admin/EditUser/${userId}`,{
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(updateData)
    })
        .then(response => response.json())
        .then(updatedData => {
          alert('User updated successfully');
          location.reload(); // Reload the page to reflect updated data
        })

        .catch(error => console.error('Error updating user:', error));
  });
</script>